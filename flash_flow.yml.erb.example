## The basic settings for your app

git:
  # This is what allows you to resolve merge conflicts using flash_flow, rerere is amazing. There's
  # more description elsewhere about how this works.
  use_rerere: true

  # Which remote your branches use
  remote: origin

  # This branch is owned by flash_flow, and will be overwritten. Don't use a branch to which you make
  # commits. Treat this as 100% ephemeral, this is the branch that you should deploy automatically to
  # your review/staging env.
  merge_branch: acceptance

  # This is your mainline production branch that is the basis for the merge branch
  master_branch: master

# An arbitrary file that flash_flow will write to in the merge branch and use to store branch information.
# Make sure it doesn't collide with a file you actually need in your application. You don't need to look at
# this file in general.
branch_info_file: 'flash_flow.json'



### Everything below here is optional and should be deleted or remain commented out if you don't need it

## We use Bitbucket as our source of truth for which branches to merge. All open pull requests that don't
## have the "do not merge" label on them get merged. If you configure this flash_flow will automatically
## create a PR for your branch when it runs. If your branch can't merge, it will still be PR'ed, but it
## will have the "unmergeable" label on it (that label is strictly informational, no functionality is
## affected at all).

#branches:
#  class:
#    name: 'FlashFlow::Data::Bitbucket'
#    token: <%= ENV['GH_TOKEN'] %>
#    repo: # Your github repo. For example, the flash_flow repo is 'flashfunders/flash_flow'
#    master_branch: master
#    unmergeable_label: unmergeable
#    do_not_merge_label: 'do not merge'
#    shippable_label: 'shippable'
